/* 
It's just a searching problem where you are given an API bool isBadVersion(version) which will return whether version is bad. 
Naive approach is to get thorugh all the versions in linear time using linear search.
However, we can optimize this using Binary search.
*/

//Binary search solution
class Solution {
public:
    int firstBadVersion(int n) {
    unsigned int l = 0;
    unsigned int r = n;
    while(l <= r)
    {
        unsigned int m = (r+l)/2;
        if(!isBadVersion(m) && isBadVersion(m+1)) 
        {
            return m+1;
        }

        if(!isBadVersion(m))
        {
            l = m + 1;
        }
        else 
        {
            r = m - 1;
        }
    }
    return -1;
    }
};
